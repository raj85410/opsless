# Opsless Backend Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
NODE_ENV=development
PORT=3001
FRONTEND_URL=http://localhost:5173

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
DB_HOST=localhost
DB_PORT=5432
DB_NAME=opsless
DB_USER=postgres
DB_PASSWORD=your_secure_password
DB_SSL=false

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=
REDIS_DB=0

# =============================================================================
# JWT CONFIGURATION
# =============================================================================
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
JWT_EXPIRES_IN=7d
JWT_REFRESH_EXPIRES_IN=30d

# =============================================================================
# FIREBASE CONFIGURATION
# =============================================================================
FIREBASE_PROJECT_ID=your-firebase-project-id
FIREBASE_PRIVATE_KEY_ID=your-private-key-id
FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYour private key here\n-----END PRIVATE KEY-----\n"
FIREBASE_CLIENT_EMAIL=firebase-adminsdk-xxxxx@your-project.iam.gserviceaccount.com
FIREBASE_CLIENT_ID=your-client-id
FIREBASE_AUTH_URI=https://accounts.google.com/o/oauth2/auth
FIREBASE_TOKEN_URI=https://oauth2.googleapis.com/token
FIREBASE_AUTH_PROVIDER_X509_CERT_URL=https://www.googleapis.com/oauth2/v1/certs
FIREBASE_CLIENT_X509_CERT_URL=https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-xxxxx%40your-project.iam.gserviceaccount.com

# =============================================================================
# AWS CONFIGURATION
# =============================================================================
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_S3_BUCKET=your-s3-bucket-name
AWS_ECR_REPOSITORY=your-ecr-repository
AWS_CLOUDFRONT_DISTRIBUTION_ID=your-cloudfront-distribution-id

# =============================================================================
# STRIPE CONFIGURATION
# =============================================================================
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret
STRIPE_PRICE_ID_MONTHLY=price_your_monthly_price_id
STRIPE_PRICE_ID_YEARLY=price_your_yearly_price_id

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================
# Gmail SMTP
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password
EMAIL_FROM=noreply@opsless.com
EMAIL_FROM_NAME=Opsless Team

# For development, use Ethereal Email
ETHEREAL_USER=test@example.com
ETHEREAL_PASS=testpass

# =============================================================================
# MONITORING & LOGGING
# =============================================================================
LOG_LEVEL=info
SENTRY_DSN=your-sentry-dsn
NEW_RELIC_LICENSE_KEY=your-new-relic-key
NEW_RELIC_APP_NAME=opsless-backend

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
BCRYPT_ROUNDS=12
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
CORS_ORIGIN=http://localhost:5173

# =============================================================================
# AI ASSISTANT CONFIGURATION
# =============================================================================
GEMINI_API_KEY=your-gemini-api-key
OPENAI_API_KEY=your-openai-api-key
AI_PROVIDER=gemini

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================
DOCKER_REGISTRY=your-docker-registry
DOCKER_USERNAME=your-docker-username
DOCKER_PASSWORD=your-docker-password
KUBERNETES_CLUSTER_URL=your-k8s-cluster-url
KUBERNETES_TOKEN=your-k8s-token

# =============================================================================
# THIRD-PARTY INTEGRATIONS
# =============================================================================
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret
GITLAB_CLIENT_ID=your-gitlab-client-id
GITLAB_CLIENT_SECRET=your-gitlab-client-secret
BITBUCKET_CLIENT_ID=your-bitbucket-client-id
BITBUCKET_CLIENT_SECRET=your-bitbucket-client-secret

# =============================================================================
# ANALYTICS & TRACKING
# =============================================================================
GOOGLE_ANALYTICS_ID=your-ga-id
MIXPANEL_TOKEN=your-mixpanel-token
AMPLITUDE_API_KEY=your-amplitude-key

# =============================================================================
# FEATURE FLAGS
# =============================================================================
ENABLE_AI_ASSISTANT=true
ENABLE_SUBSCRIPTIONS=true
ENABLE_MULTI_CLOUD=true
ENABLE_TEAM_COLLABORATION=false
ENABLE_ADVANCED_MONITORING=true

# =============================================================================
# PERFORMANCE & CACHING
# =============================================================================
CACHE_TTL=3600
SESSION_SECRET=your-session-secret
COMPRESSION_LEVEL=6
MAX_FILE_SIZE=10485760

# =============================================================================
# DEVELOPMENT & TESTING
# =============================================================================
DEBUG=true
TEST_DATABASE_URL=postgresql://test_user:test_pass@localhost:5432/opsless_test
MOCK_AWS_SERVICES=false
ENABLE_SWAGGER=true

# =============================================================================
# PRODUCTION SPECIFIC
# =============================================================================
# Uncomment and configure for production
# SSL_KEY_PATH=/path/to/ssl/key.pem
# SSL_CERT_PATH=/path/to/ssl/cert.pem
# CLUSTER_MODE=true
# WORKER_PROCESSES=4 